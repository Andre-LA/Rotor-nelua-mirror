--[[
Returns a new entity type that copies the same fields of the passed `e_type`, plus the `extra`
components, note that only the record it's "cloned", not the methods.
]]

local utils = require 'rotor.utils'
local entity = require 'rotor.entity'

## local make_extended = generalize(function(base_entity, extra_components)
  ##[[
  static_assert(
    base_entity.is_entity,
    "'%s' was passed as a base entity, but it's not an entity type",
    base_entity.nickname
  )

  for _, field in ipairs(extra_components.fields) do
    utils.value.assert_entity_field(field)
  end
  ]]

  local extended_entity = @entity(record{})

  ##[[
  for _, field in ipairs(base_entity.fields) do
    extended_entity.value:add_field(field.name, field.type)
  end
  for _, field in ipairs(extra_components.fields) do
    extended_entity.value:add_field(field.name, field.type)
  end

  return extended_entity
  ]]
## end)

local extended: type = @#[make_extended]#
return extended
